buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
defaultTasks 'bootRun'

group = 'mabernardo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

if (project.hasProperty('prod')) {
	apply from: 'gradle/profile_prod.gradle'
} else {
	apply from: 'gradle/profile_dev.gradle'
}
apply from: 'gradle/liquibase.gradle'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web') {

        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.hibernate:hibernate-core:${hibernate_version}"
    compile "org.hibernate:hibernate-envers:${hibernate_version}"
    compile "org.hibernate:hibernate-validator"
    compile "org.hibernate:hibernate-entitymanager:${hibernate_version}"
    compile('com.h2database:h2')
    compile('org.liquibase:liquibase-core')
    compile("com.zaxxer:HikariCP:${hikaricp_version}")
    compile "io.jsonwebtoken:jjwt:${jjwt_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner"
    compile "org.zalando:problem-spring-web:${problem_spring_web_version}"
    runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

clean {
	delete "target"
}

task cleanResources(type: Delete) {
	delete 'build/resources'
}

compileJava.dependsOn processResources
//processResources.dependsOn cleanResources,bootBuildInfo
//#bootBuildInfo.mustRunAfter cleanResources
