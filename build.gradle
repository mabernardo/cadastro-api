buildscript {
	repositories {
		mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
        classpath "gradle.plugin.org.detoeuf:swagger-codegen-plugin:1.7.4"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
defaultTasks 'bootRun'

group = 'mabernardo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

if (project.hasProperty('prod')) {
	apply from: 'gradle/profile_prod.gradle'
} else {
	apply from: 'gradle/profile_dev.gradle'
}
apply from: 'gradle/docker.gradle'
apply from: 'gradle/liquibase.gradle'
apply from: 'gradle/swagger.gradle'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web') {

        exclude module: 'spring-boot-starter-tomcat'
    }
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.security:spring-security-data"
    compile "org.hibernate:hibernate-core:${hibernate_version}"
    compile "org.hibernate:hibernate-envers:${hibernate_version}"
    compile "org.hibernate:hibernate-validator"
    compile "org.hibernate:hibernate-entitymanager:${hibernate_version}"
    compile('com.h2database:h2')
    compile('org.liquibase:liquibase-core')
    compile("com.zaxxer:HikariCP:${hikaricp_version}")
    compile "io.jsonwebtoken:jjwt:${jjwt_version}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "org.zalando:problem-spring-web:${problem_spring_web_version}"
    compile "org.apache.commons:commons-lang3:${commons_lang_version}"
    compile ("io.springfox:springfox-swagger2:${springfox_version}") {
        exclude module: 'mapstruct'
    }
    compile ("io.springfox:springfox-swagger-ui:${springfox_version}")
    runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.springframework.boot:spring-boot-test"
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile "junit:junit"
    testCompile "org.mockito:mockito-core"
    testCompile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"

}

clean {
	delete "target"
}

task cleanResources(type: Delete) {
	delete 'build/resources'
}

compileJava.dependsOn processResources